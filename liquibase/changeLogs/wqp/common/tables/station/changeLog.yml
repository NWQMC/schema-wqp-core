databaseChangeLog:
  - preConditions:
    - dbms:
        type: postgresql

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.station"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: station
      changes:
        - sqlFile:
            path: station.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.station cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.station.partition.biodata"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: station_biodata
      changes:
        - sqlFile:
            path: stationBiodata.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.station_biodata cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.station.partition.nwis"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: station_nwis
      changes:
        - sqlFile:
            path: stationNwis.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.station_nwis cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.station.partition.stewards"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: station_stewards
      changes:
        - sqlFile:
            path: stationStewards.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.station_stewards cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.station.partition.storet"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: station_storet
      changes:
        - sqlFile:
            path: stationStoret.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.station_storet cascade;
