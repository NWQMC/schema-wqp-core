databaseChangeLog:
  - preConditions:
    - dbms:
        type: postgresql

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.country"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: country
      changes:
        - sqlFile:
            path: country.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.country cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.country.partition.biodata"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: country_biodata
      changes:
        - sqlFile:
            path: countryBiodata.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.country_biodata cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.country.partition.nwis"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: country_nwis
      changes:
        - sqlFile:
            path: countryNwis.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.country_nwis cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.country.partition.stewards"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: country_stewards
      changes:
        - sqlFile:
            path: countryStewards.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.country_stewards cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.country.partition.storet"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: country_storet
      changes:
        - sqlFile:
            path: countryStoret.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.country_storet cascade;
