databaseChangeLog:
  - preConditions:
    - dbms:
        type: postgresql

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.state"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: state
      changes:
        - sqlFile:
            path: state.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.state cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.state.partition.biodata"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: state_biodata
      changes:
        - sqlFile:
            path: stateBiodata.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.state_biodata cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.state.partition.nwis"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: state_nwis
      changes:
        - sqlFile:
            path: stateNwis.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.state_nwis cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.state.partition.stewards"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: state_stewards
      changes:
        - sqlFile:
            path: stateStewards.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.state_stewards cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.state.partition.storet"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: state_storet
      changes:
        - sqlFile:
            path: stateStoret.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.state_storet cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.states"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: states
      changes:
        - sqlFile:
            path: states.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.states cascade;
