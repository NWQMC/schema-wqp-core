databaseChangeLog:
  - preConditions:
    - dbms:
        type: postgresql

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.result"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: result
      changes:
        - sqlFile:
            path: result.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.result cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.result.partition.biodata"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: result_biodata
      changes:
        - sqlFile:
            path: resultBiodata.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.result_biodata cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.result.partition.nwis"
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: result_nwis
      changes:
        - sqlFile:
            path: resultNwis.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.result_nwis cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.result.partition.stewards"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: result_stewards
      changes:
        - sqlFile:
            path: resultStewards.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.result_stewards cascade;

  - changeSet:
      author: drsteini
      id: "create.table.${schemaName}.result.partition.storet"
      context: external
      preConditions:
        - onFail: MARK_RAN
        - onError: HALT
        - not:
          - tableExists:
              tableName: result_storet
      changes:
        - sqlFile:
            path: resultStoret.sql
            relativeToChangelogFile: true
        - rollback: drop table if exists ${schemaName}.result_storet cascade;
